#!/usr/bin/env tclsh
package require tcltest

tcltest::test basegui-1.1 {package load} {
    lappend auto_path .
    package require paul
} {0.3.0}

tcltest::test basegui-1.2 {basegui test} {
    package require paul
    set app [::paul::basegui new -style clam]
    set f [$app getFrame]
    set tf [ttk::frame $f.tframe]
    set t [text $tf.text -wrap none]
    $app autoscroll $t
    for {set i 0} {$i < 30} {incr i} {
        $t insert end "Lorem ipsum dolor sit amet, ....\n\n"
    }
    pack $tf -side top -fill both -expand yes
    update idletasks
    after 3000 
    set x 1
} {1}

tcltest::test basegui-1.2 {exit test application} {
    foreach child [winfo children .] {
        destroy $child
    }   
} {}

tcltest::test basegui-1.3 {insert menu} {
    set app [::paul::basegui new -style clam]
    set fmenu [$app getMenu "File"]
    $fmenu insert 0 command -label Open -underline 0 -command { puts Opening }
    update idletasks
    after 3000 
    set x 1
} {1}

tcltest::test basegui-1.4 {splash test} {
    foreach child [winfo children .] {
        destroy $child
    }   
    $app splash images/splash.png -delay 3 -message "Loading editor application ..."
    after 2000 { $app splash update -message "Loading data for editor application ..." }
    after 4000 { $app splash destroy }
    set x 1
} {1}

tcltest::test basegui-1.5 {timer test} {
    set app [paul::basegui new]
    puts "Startup in [$app timer time] seconds!"
    $app timer reset
    after 1500
    puts "After time [$app timer time] seconds!"
    set x 1
} {1}

tcltest::test basegui-1.6 {complex example} {
    foreach child [winfo children .] {
        destroy $child
    }   
    set app [::paul::basegui new]
    puts "Startup in [$app timer time] seconds!"
    $app timer reset
    set fmenu [$app getMenu "File"]
    $fmenu insert 0 command -label Open -underline 0 -command { puts Opening }
    $app addStatusBar
    $app progress 10
    $app message "starting ..."
    after 1000
    $app status progressing... 50
    after 1000
    $app status finished 100
    set f [$app getFrame]
    set btn [ttk::button $f.btn -text "Hover me!"]
    $app balloon $btn "This is the hover message!\nNice ?"
    pack $btn -side top
    set tf [ttk::frame $f.tframe]
    set t [text $tf.text -wrap none]
    $app autoscroll $t
    for {set i 0} {$i < 30} {incr i} {
        $t insert end "Lorem ipsum dolor sit amet, consectetur adipiscing elit, 
      sed do eiusmod tempor 
      incididunt ut labore et dolore magna aliqua. 
      Ut enim ad minim veniam, quis nostrud exercitation 
      ullamco laboris nisi ut aliquip ex ea commodo consequat.\n\n"
    }
    pack $tf -side top -fill both -expand yes
    pack [canvas $f.c] -side top -fill both -expand true
    set id [$f.c create oval 10 10 110 110 -fill red]
    $app cballoon $f.c $id "This is a red oval"
    $f.c create rect 130 30 190 90 -fill blue -tag rect
    $app cballoon $f.c rect "This is\na blue square"
    puts "After time [$app timer time] seconds!"
    update idletasks
    after 3000
    set x 1
} {1}

tcltest::test basegui-1.7 {simple text editor} {
    # not sure why destroy winfo children does not work
    foreach child [winfo children .] {
        destroy $child
    }   
    after 1000 
    package require paul
    oo::class create EditorApp {
        superclass paul::basegui
        variable textw
        constructor {args} {
            next {*}$args
            set frame [my getFrame]
            set textw [text $frame.t -wrap none]
            [self] autoscroll $textw
        }
        # added functionality
        # access functionality of the text widget
        # like: % app text insert end "hello basegui world"
        method text {args} {
          $textw {*}$args
        }
    }
    #start editor
    set app [EditorApp new]
    $app text insert end "Hello EditorApp!!"
    $app addStatusBar
    $app progress 50
    $app message "Editor was loaded!"
    update idletasks
    after 3000 
    set x 1
} {1}


